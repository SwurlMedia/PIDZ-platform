:root {
  //Colors
  --color-blue-primary: #004d9d;
  --color-red-secondary: #f9574e;
  --color-orange-tertiary: #f6842b;
  --color-blue-light: #e6edf5;
  --color-text-primary: #40404f;
  --color-white: #fff;
  //Spacing rules
  --spacing-xxs: 0.5rem;
  --spacing-xs: 1rem;
  --spacing-s: 2rem;
  --spacing-m: 5rem;
  --spacing-l: 7rem;
  --spacing-xl: 10rem;
  --spacing-xxl: 14rem;
  //Fonts
  --font-primary: lato, sans-serif;
}

//Set html rules
html {
  font-size: 8px;
  box-sizing: border-box;
  font-family: var(--font-primary);
}

*,
*:before,
*:after {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  box-sizing: inherit;
}

//Set body rules
body {
  &.no-scroll {
    overflow: hidden;
  }
}

//Set selection colors
::selection {
  background: var(--color-blue-primary);
  color: var(--color-white);
}

//Set Heading font sizes & colors

h1,
h2,
h3,
h4,
h5,
h6 {
  color: var(--color-blue-primary);
  font-family: var(--font-primary);
  font-weight: 700;
  margin: 0.5em 0;
}

h1 {
  font-size: 8.5rem;
  line-height: 9rem;
}

h2 {
  font-size: 7.5rem;
  line-height: 8rem;
}

h3 {
  font-size: 6rem;
}

h4 {
  font-size: 4.5rem;
  line-height: 5rem;
}

h5 {
  font-size: 3rem;
}

h6 {
  font-size: 2.25rem;
  line-height: 3rem;
}

p {
  font-family: var(--font-primary);
  color: var(--color-text-primary);
  font-weight: 400;
  font-size: 2.25rem;
  line-height: 3rem;
  margin: 0;
}

a {
  font-family: var(--font-primary);
  font-weight: 700;
}

.btn {
  border: none;
  text-transform: uppercase;
  letter-spacing: 0.75rem;
  text-decoration: none;
  padding: 1.5rem 2.5rem;
  cursor: pointer;
  text-align: center;
  border-radius: 1rem;
  font-size: 2rem;
  font-weight: 700;
  transition: opacity 0.2s ease-out;

  &:hover {
    opacity: 0.8;
  }

  &:disabled {
    filter: saturate(0);
    cursor: not-allowed;

    &:hover {
      opacity: 1;
    }
  }
}

ul,
ol {
  margin: 0;
  padding: 0;
}

img {
  display: block;
}

.grid-container {
  display: grid;
  grid-template-columns: 2rem repeat(4, 1fr) 2rem;
  grid-column-gap: 2rem;
  width: 100%;

  > * {
    grid-column: 2 / span 4;
  }

  @include respond-to(MEDIUM) {
    grid-template-columns: 2rem repeat(12, 1fr) 2rem;

    > * {
      grid-column: 2 / span 12;
    }
  }

  @include respond-to(LARGE) {
    grid-template-columns: 1fr repeat(24, 3rem) 1fr;

    > * {
      grid-column: 2 / span 24;
    }
  }

  @include respond-to(XLARGE) {
    grid-template-columns: 1fr repeat(24, 5rem) 1fr;
  }
}
